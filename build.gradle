buildscript {
	repositories {
		maven {
			url = 'https://maven.minecraftforge.net'
		}
		mavenCentral()
	}
	
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7.+'
	}
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '1.19-1.0'
group = 'net.luis.xsurvive'
archivesBaseName = 'XSurvive'
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
	mappings channel: 'official', version: '1.19'
	
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	
	runs {
		client {
			workingDirectory project.file('run')
			
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', 'xsurvive'
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
			
			mods {
				examplemod {
					source sourceSets.main
				}
			}
		}
		
		server {
			workingDirectory project.file('run')
			
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', 'xsurvive'
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
			
			mods {
				examplemod {
					source sourceSets.main
				}
			}
		}
		
		gameTestServer {
			workingDirectory project.file('run')
			
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', 'xsurvive'
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
			
			mods {
				examplemod {
					source sourceSets.main
				}
			}
		}
		
		data {
			workingDirectory project.file('run')
			
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', 'xsurvive'
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
			
			args '--mod', 'xsurvive', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
			
			mods {
				examplemod {
					source sourceSets.main
				}
			}
		}
	}
}

mixin {
	add sourceSets.main, 'mixins.xsurvive.refmap.json'
	config 'xsurvive.mixins.json'
	debug.export = true
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	mavenLocal()
}

dependencies {
	minecraft 'net.minecraftforge:forge:1.19-41.0.61'
	
	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
	
	implementation fg.deobf('net.luis.xbackpack:Forge-XBackpack:1.19-1.7')
	implementation fg.deobf('net.luis.xores:Forge-XOres:1.19-1.3')
}

jar {
	manifest {
		attributes([
			"Specification-Title"     : "XSurvive",
			"Specification-Version"   : "1.19-1.0",
			"Implementation-Title"    : project.name,
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

jar.finalizedBy('reobfJar')

java {
	withSourcesJar()
}

artifacts {
	archives sourcesJar
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact jar
		}
	}
	
	repositories {
		maven {
			url "file://${project.projectDir}/maven"
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}
